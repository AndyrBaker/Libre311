gcp:
  project-id: ${GCP_PROJECT_ID}

micronaut:
  application:
    name: app
  object-storage:
    gcp:
      default:
        bucket: ${STORAGE_BUCKET_ID:`your-client-id-here.apps.googleusercontent.com`}
  security:
    authentication: cookie
    oauth2:
      login-uri: "/api/oauth/login{/provider}"
      callback-uri: "/api/oauth/callback{/provider}"
      clients:
        google:
          client-id: ${GOOGLE_CLIENT_ID:`your-client-id-here.apps.googleusercontent.com`}
          client-secret: ${GOOGLE_CLIENT_SECRET:`googleClientSecret`}
          openid:
            authorization:
              prompt: select_account
            issuer: "https://accounts.google.com"
    endpoints:
      introspection:
        path: /api/token_info
      logout:
        path: /api/logout
        get-allowed: true
      login:
        path: /api/login
      oauth:
        path: /api/oauth/access_token
    intercept-url-map:
      - pattern: /favicon.ico
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /login-failed.html
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /info
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /assets/**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /swagger-ui/**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /swagger/**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /**
        http-method: GET
        access:
          - isAnonymous()
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
      default:
        paths: classpath:public
        mapping: /**
        enabled: true
  data:
    pageable:
      size-parameter-name: page_size
datasources:
  default:
    db-type: ${LIBRE311_DB_TYPE}
jpa:
  default:
    entity-scan:
      packages: "app.model"
    properties:
      hibernate:
        hbm2ddl:
          auto: ${LIBRE311_AUTO_SCHEMA_GEN:update}
netty:
  default:
    allocator:
      max-order: 3
app:
  image-storage:
    bucket-url-format: "https://storage.googleapis.com/%s/"
    bucket:  a69c003f-5281-4376-9875-ebac846ae7e9-wemove # same as micronaut.object-storage.gcp.default.bucket above.
    append-object-url-format: "%s"
  recaptcha:
    secret: ${RECAPTCHA_SECRET:`recaptchaSecret`}
  safesearch:
    key: ${SAFESEARCH_KEY:`safesearchKey`}